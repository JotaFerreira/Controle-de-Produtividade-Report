package views;

import java.awt.Color;
import java.awt.event.ItemEvent;
import java.io.File;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.Map;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryLabelPositions;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.StandardBarPainter;
import org.jfree.data.category.DefaultCategoryDataset;
import util.ExcelExporter;

/**
 *
 * @author joao.oliveira
 */
public class PrincipalForm extends javax.swing.JFrame {

    /**
     * Creates new form PrincipalForm
     */
    public PrincipalForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        principalTab = new javax.swing.JTabbedPane();
        indicadoresPanel = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        controladorContPanel = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        producaoConTable = new javax.swing.JTable();
        graficoPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        diaInicialCmb1 = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        mesInicialCmb1 = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        anoInicialCmb1 = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();
        diaFinalCmb1 = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        mesFinalCmb1 = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        anoFinalCmb1 = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        segmentoCmb1 = new javax.swing.JComboBox();
        btnPesquisar = new javax.swing.JButton();
        graficoPanel1 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        mesMediaCmb = new javax.swing.JComboBox();
        jLabel17 = new javax.swing.JLabel();
        anoMediaCmb = new javax.swing.JComboBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        basePanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        segmentoCmb = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        diaInicialCmb = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        mesInicialCmb = new javax.swing.JComboBox();
        jLabel4 = new javax.swing.JLabel();
        anoInicialCmb = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        diaFinalCmb = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        mesFinalCmb = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        anoFinalCmb = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        producaoConTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(producaoConTable);

        javax.swing.GroupLayout graficoPanel2Layout = new javax.swing.GroupLayout(graficoPanel2);
        graficoPanel2.setLayout(graficoPanel2Layout);
        graficoPanel2Layout.setHorizontalGroup(
            graficoPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        graficoPanel2Layout.setVerticalGroup(
            graficoPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 244, Short.MAX_VALUE)
        );

        jLabel8.setText("Data Inicial:");

        jLabel9.setText("/");

        mesInicialCmb1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mesInicialCmb1ItemStateChanged(evt);
            }
        });

        jLabel10.setText("/");

        jLabel11.setText("Data Final:");

        jLabel12.setText("/");

        mesFinalCmb1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mesFinalCmb1ItemStateChanged(evt);
            }
        });

        jLabel13.setText("/");

        jLabel14.setText("Segmento:");

        segmentoCmb1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                segmentoCmb1ItemStateChanged(evt);
            }
        });
        segmentoCmb1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                segmentoCmb1ActionPerformed(evt);
            }
        });

        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout graficoPanel1Layout = new javax.swing.GroupLayout(graficoPanel1);
        graficoPanel1.setLayout(graficoPanel1Layout);
        graficoPanel1Layout.setHorizontalGroup(
            graficoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        graficoPanel1Layout.setVerticalGroup(
            graficoPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 255, Short.MAX_VALUE)
        );

        jLabel16.setText("Mês:");

        mesMediaCmb.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro" }));
        mesMediaCmb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mesMediaCmbItemStateChanged(evt);
            }
        });

        jLabel17.setText("Ano:");

        anoMediaCmb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                anoMediaCmbItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout controladorContPanelLayout = new javax.swing.GroupLayout(controladorContPanel);
        controladorContPanel.setLayout(controladorContPanelLayout);
        controladorContPanelLayout.setHorizontalGroup(
            controladorContPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controladorContPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(controladorContPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(controladorContPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(controladorContPanelLayout.createSequentialGroup()
                            .addComponent(jLabel11)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(diaFinalCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel12)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(mesFinalCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel13)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(anoFinalCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(controladorContPanelLayout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(diaInicialCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(mesInicialCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(anoInicialCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(controladorContPanelLayout.createSequentialGroup()
                            .addComponent(jLabel14)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(segmentoCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(controladorContPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(graficoPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(graficoPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(controladorContPanelLayout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mesMediaCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(anoMediaCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 640, Short.MAX_VALUE)))
                .addContainerGap())
        );
        controladorContPanelLayout.setVerticalGroup(
            controladorContPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(controladorContPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(controladorContPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(diaInicialCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(mesInicialCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(anoInicialCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(mesMediaCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(anoMediaCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(controladorContPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(controladorContPanelLayout.createSequentialGroup()
                        .addGroup(controladorContPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(diaFinalCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)
                            .addComponent(mesFinalCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(anoFinalCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(controladorContPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(segmentoCmb1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(controladorContPanelLayout.createSequentialGroup()
                        .addComponent(graficoPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(graficoPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(44, 44, 44))
        );

        jScrollPane2.setViewportView(controladorContPanel);

        jTabbedPane1.addTab("Controlador", jScrollPane2);
        jTabbedPane1.addTab("Técnico", jScrollPane3);

        javax.swing.GroupLayout indicadoresPanelLayout = new javax.swing.GroupLayout(indicadoresPanel);
        indicadoresPanel.setLayout(indicadoresPanelLayout);
        indicadoresPanelLayout.setHorizontalGroup(
            indicadoresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        indicadoresPanelLayout.setVerticalGroup(
            indicadoresPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 510, Short.MAX_VALUE)
        );

        principalTab.addTab("Indicadores", indicadoresPanel);

        jLabel1.setText("Segmento:");

        jLabel2.setText("Data Inicial:");

        jLabel3.setText("/");

        mesInicialCmb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mesInicialCmbItemStateChanged(evt);
            }
        });

        jLabel4.setText("/");

        jLabel5.setText("Data Final:");

        jLabel6.setText("/");

        mesFinalCmb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                mesFinalCmbItemStateChanged(evt);
            }
        });

        jLabel7.setText("/");

        jButton1.setText("Pesquisar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout basePanelLayout = new javax.swing.GroupLayout(basePanel);
        basePanel.setLayout(basePanelLayout);
        basePanelLayout.setHorizontalGroup(
            basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(basePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(basePanelLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(segmentoCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(diaInicialCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mesInicialCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(anoInicialCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(diaFinalCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mesFinalCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(anoFinalCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addGap(0, 300, Short.MAX_VALUE)))
                .addContainerGap())
        );
        basePanelLayout.setVerticalGroup(
            basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(basePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(basePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(segmentoCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(diaInicialCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(mesInicialCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(anoInicialCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(diaFinalCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)
                        .addComponent(mesFinalCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(anoFinalCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
                .addContainerGap())
        );

        principalTab.addTab("Base", basePanel);

        jMenu1.setText("Arquivo");

        jMenuItem2.setText("Sair");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Opções");

        jMenuItem1.setText("Exportar Base");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(principalTab)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(principalTab, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    static boolean iniciado;

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        this.setTitle("Controle de Produtividade - Gestão");

        try {

            String pastaRaiz = System.getProperty("user.dir");

            if (pastaRaiz.contains("CONTROLE LOCAL DIR_CE")) {

                JOptionPane.showMessageDialog(null, "Não é permitido executar o programa nesse caminho! \r\n COPIE o arquivo para sua área de trabalho e execute!");
                this.dispose();

            }

            Calendar calendar = Calendar.getInstance();

            preencheSegmentos();
            preencheAnos();
            preencheMeses();
            preencheDiasIniciais();
            preencheDiasFinais();

            int diaHoje = calendar.get(Calendar.DAY_OF_MONTH);
            this.diaInicialCmb.setSelectedIndex(diaHoje - 1);
            this.diaFinalCmb.setSelectedIndex(diaHoje - 1);
            this.diaInicialCmb1.setSelectedIndex(diaHoje - 1);
            this.diaFinalCmb1.setSelectedIndex(diaHoje - 1);

            preencheProducaoControlador();
            montaGraficoProdControlador();
            montaGraficoMediaCon();

            PrincipalForm.iniciado = true;

        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex, "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_formWindowOpened

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

        if (this.jTable1.getRowCount() == 0) {

            return;

        }

        JFileChooser dialogo = new JFileChooser();
        dialogo.showSaveDialog(this);

        if (dialogo.getSelectedFile() != null) {

            ExcelExporter Exporter = new util.ExcelExporter();
            File arquivo = new File(dialogo.getSelectedFile().toString() + ".xls");
            Exporter.fillData(jTable1, arquivo);
            JOptionPane.showMessageDialog(null, "Dados Exportados com exito! \r\n" + arquivo);

        }

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed

        this.dispose();

    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try {
            pesquisaDados();
            JOptionPane.showMessageDialog(null, "Registros Encontrados: " + this.jTable1.getRowCount(), "Pesquisa Realizada!", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex, "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void mesFinalCmbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mesFinalCmbItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            preencheDiasFinais();
        }
    }//GEN-LAST:event_mesFinalCmbItemStateChanged

    private void mesInicialCmbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mesInicialCmbItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            preencheDiasIniciais();
        }
    }//GEN-LAST:event_mesInicialCmbItemStateChanged

    private void mesInicialCmb1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mesInicialCmb1ItemStateChanged
        
        
        
    }//GEN-LAST:event_mesInicialCmb1ItemStateChanged

    private void mesFinalCmb1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mesFinalCmb1ItemStateChanged
        
        
        
    }//GEN-LAST:event_mesFinalCmb1ItemStateChanged

    private void segmentoCmb1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_segmentoCmb1ItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED & PrincipalForm.iniciado) {

            preencheProducaoControlador();

            try {
                montaGraficoProdControlador();
                montaGraficoMediaCon();
            } catch (SQLException | ClassNotFoundException ex) {
                JOptionPane.showMessageDialog(null, "Erro: " + ex, "Erro", JOptionPane.ERROR_MESSAGE);
            }

        }

    }//GEN-LAST:event_segmentoCmb1ItemStateChanged

    private void mesMediaCmbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_mesMediaCmbItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED & PrincipalForm.iniciado) {

            try {

                montaGraficoMediaCon();

            } catch (ClassNotFoundException | SQLException ex) {

                JOptionPane.showMessageDialog(null, "Erro: " + ex, "Erro", JOptionPane.ERROR_MESSAGE);

            }

        }

    }//GEN-LAST:event_mesMediaCmbItemStateChanged

    private void anoMediaCmbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_anoMediaCmbItemStateChanged

        if (PrincipalForm.iniciado & evt.getStateChange() == ItemEvent.SELECTED) {

            try {

                montaGraficoMediaCon();

            } catch (SQLException | ClassNotFoundException ex) {

                JOptionPane.showMessageDialog(null, "Erro: " + ex, "Erro", JOptionPane.ERROR_MESSAGE);

            }

        }

    }//GEN-LAST:event_anoMediaCmbItemStateChanged

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed

        try {

            preencheProducaoControlador();
            montaGraficoProdControlador();
            montaGraficoMediaCon();

        } catch (SQLException | ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex, "Erro", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void segmentoCmb1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_segmentoCmb1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_segmentoCmb1ActionPerformed

    private void preencheSegmentos() throws SQLException, ClassNotFoundException {

        data.access.object.DAOSegmento DAOSegmento = new data.access.object.DAOSegmento();
        List segmentos = DAOSegmento.getSegmentos();
        this.segmentoCmb.removeAllItems();
        this.segmentoCmb.addItem("");
        this.segmentoCmb1.removeAllItems();

        for (int i = 0; i <= segmentos.size() - 1; i++) {

            Map obj = (Map) segmentos.get(i);
            this.segmentoCmb.addItem(obj.get("SEGMENTO"));
            this.segmentoCmb1.addItem(obj.get("SEGMENTO"));

        }

        this.segmentoCmb.setSelectedIndex(-1);
        this.segmentoCmb1.setSelectedIndex(0);

    }

    private void preencheDiasIniciais() {

        if (this.mesInicialCmb.getSelectedItem() != null && this.anoInicialCmb.getSelectedItem() != null) {
            int ano = Integer.parseInt(this.anoInicialCmb.getSelectedItem().toString());
            int mes = Integer.parseInt(this.mesInicialCmb.getSelectedItem().toString());
            Calendar mycal = new GregorianCalendar(ano, mes, 0);
            int daysInMonth = mycal.getActualMaximum(Calendar.DAY_OF_MONTH);

            this.diaInicialCmb.removeAllItems();
            this.diaInicialCmb1.removeAllItems();

            for (int i = 1; i <= daysInMonth; i++) {

                this.diaInicialCmb.addItem(i);
                this.diaInicialCmb1.addItem(i);

            }

        }

    }

    private void preencheDiasFinais() {

        if (this.mesFinalCmb.getSelectedItem() != null && this.anoFinalCmb.getSelectedItem() != null) {
            int ano = Integer.parseInt(this.anoFinalCmb.getSelectedItem().toString());
            int mes = Integer.parseInt(this.mesFinalCmb.getSelectedItem().toString());
            Calendar mycal = new GregorianCalendar(ano, mes, 0);
            int daysInMonth = mycal.getActualMaximum(Calendar.DAY_OF_MONTH);

            this.diaFinalCmb.removeAllItems();
            this.diaFinalCmb1.removeAllItems();

            for (int i = 1; i <= daysInMonth; i++) {

                this.diaFinalCmb.addItem(i);
                this.diaFinalCmb1.addItem(i);

            }

        }

    }

    private void preencheMeses() throws SQLException, ClassNotFoundException {

        for (int i = 1; i <= 12; i++) {

            this.mesInicialCmb.addItem(i);
            this.mesFinalCmb.addItem(i);
            this.mesInicialCmb1.addItem(i);
            this.mesFinalCmb1.addItem(i);

        }

        Calendar calendar = Calendar.getInstance();
        this.mesInicialCmb.setSelectedIndex(calendar.get(Calendar.MONTH));
        this.mesFinalCmb.setSelectedIndex(calendar.get(Calendar.MONTH));
        this.mesInicialCmb1.setSelectedIndex(calendar.get(Calendar.MONTH));
        this.mesFinalCmb1.setSelectedIndex(calendar.get(Calendar.MONTH));
        this.mesMediaCmb.setSelectedIndex(calendar.get(Calendar.MONTH));

    }

    private void preencheAnos() throws SQLException, ClassNotFoundException {

        data.access.object.DAOData DAOData = new data.access.object.DAOData();
        List anos = DAOData.getAnos();
        this.anoInicialCmb.removeAllItems();
        this.anoFinalCmb.removeAllItems();

        for (int i = 0; i <= anos.size() - 1; i++) {

            Map obj = (Map) anos.get(i);
            this.anoInicialCmb.addItem(obj.get("ANO"));
            this.anoFinalCmb.addItem(obj.get("ANO"));
            this.anoInicialCmb1.addItem(obj.get("ANO"));
            this.anoFinalCmb1.addItem(obj.get("ANO"));
            this.anoMediaCmb.addItem(obj.get("ANO"));

        }

        this.anoInicialCmb.setSelectedIndex(this.anoInicialCmb.getItemCount() - 1);
        this.anoFinalCmb.setSelectedIndex(this.anoFinalCmb.getItemCount() - 1);
        this.anoInicialCmb1.setSelectedIndex(this.anoInicialCmb1.getItemCount() - 1);
        this.anoFinalCmb1.setSelectedIndex(this.anoFinalCmb1.getItemCount() - 1);
        this.anoMediaCmb.setSelectedIndex(this.anoFinalCmb1.getItemCount() - 1);

    }

    private void pesquisaDados() throws SQLException {

        data.access.object.DAOProducao Pesquisa = new data.access.object.DAOProducao();
        Object objSegmento = this.segmentoCmb.getSelectedItem();
        Object objDiaInicio = this.diaInicialCmb.getSelectedItem();
        Object objMesInicio = this.mesInicialCmb.getSelectedItem();
        Object objAnoInicio = this.anoInicialCmb.getSelectedItem();
        Object objDiaFinal = this.diaFinalCmb.getSelectedItem();
        Object objMesFinal = this.mesFinalCmb.getSelectedItem();
        Object objAnoFinal = this.anoFinalCmb.getSelectedItem();

        String segmento = objSegmento != null ? objSegmento.toString() : "";
        String diaInicio = objDiaInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaInicio.toString())) : "";
        String mesInicio = objMesInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objMesInicio.toString())) : "";
        String anoInicio = objAnoInicio != null ? objAnoInicio.toString() : "";
        String diaFinal = objDiaFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaFinal.toString())) : "";
        String mesFinal = objMesFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objMesFinal.toString())) : "";
        String anoFinal = objAnoFinal != null ? objAnoFinal.toString() : "";

        String dataInicio = anoInicio + "-" + mesInicio + "-" + diaInicio;
        String dataFim = anoFinal + "-" + mesFinal + "-" + diaFinal;

        try {

            List resultado = Pesquisa.getProducaoPorSegmento(segmento, dataInicio, dataFim);

            Object[] colunaNomes = {"CONTROLADOR", "DATA", "UF", "GRA", "SEGMENTO", "TRATAMENTO", "ATIVIDADE", "TECNICO",
                "MATERIAL APLICADO", "LOC_CIR_TER", "USUARIO"};
            DefaultTableModel dados = new DefaultTableModel(new Object[0][0], colunaNomes) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };

            for (int i = 0; i <= resultado.size() - 1; i++) {

                Map obj = (Map) resultado.get(i);
                Object[] valores = {obj.get("controlador"), obj.get("Data_Entrada"), obj.get("uf"), obj.get("gra"), obj.get("segmento"),
                    obj.get("tratamento"), obj.get("atividade"), obj.get("TECNICO"), obj.get("material_aplicado"),
                    obj.get("loc_cir_ter"), obj.get("username")};
                dados.addRow(valores);

            }

            this.jTable1.setModel(dados);

        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex, "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void preencheProducaoControlador() {

        data.access.object.DAOProducao Pesquisa = new data.access.object.DAOProducao();
        Object objSegmento = this.segmentoCmb1.getSelectedItem();
        Object objDiaInicio = this.diaInicialCmb1.getSelectedItem();
        Object objMesInicio = this.mesInicialCmb1.getSelectedItem();
        Object objAnoInicio = this.anoInicialCmb1.getSelectedItem();
        Object objDiaFinal = this.diaFinalCmb1.getSelectedItem();
        Object objMesFinal = this.mesFinalCmb1.getSelectedItem();
        Object objAnoFinal = this.anoFinalCmb1.getSelectedItem();

        String segmento = objSegmento != null ? objSegmento.toString() : "";
        String diaInicio = objDiaInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaInicio.toString())) : "";
        String mesInicio = objMesInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objMesInicio.toString())) : "";
        String anoInicio = objAnoInicio != null ? objAnoInicio.toString() : "";
        String diaFinal = objDiaFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaFinal.toString())) : "";
        String mesFinal = objMesFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objMesFinal.toString())) : "";
        String anoFinal = objAnoFinal != null ? objAnoFinal.toString() : "";

        String dataInicio = anoInicio + "-" + mesInicio + "-" + diaInicio;
        String dataFim = anoFinal + "-" + mesFinal + "-" + diaFinal;

        try {

            List resultado = Pesquisa.getProducaoControlador(segmento, dataInicio, dataFim);

            Object[] colunaNomes = {"CONTROLADOR", "QUANTIDADE"};
            DefaultTableModel dados = new DefaultTableModel(new Object[0][0], colunaNomes) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };

            for (int i = 0; i <= resultado.size() - 1; i++) {

                Map obj = (Map) resultado.get(i);
                Object[] valores = {obj.get("CONTROLADOR").toString().toUpperCase(), obj.get("QUANTIDADE")};
                dados.addRow(valores);

            }

            this.producaoConTable.setModel(dados);

        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro: " + ex, "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }

    public void montaGraficoProdControlador() throws SQLException, ClassNotFoundException {

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        Object objSegmento = this.segmentoCmb1.getSelectedItem();
        Object objDiaInicio = this.diaInicialCmb1.getSelectedItem();
        Object objMesInicio = this.mesInicialCmb1.getSelectedItem();
        Object objAnoInicio = this.anoInicialCmb1.getSelectedItem();
        Object objDiaFinal = this.diaFinalCmb1.getSelectedItem();
        Object objMesFinal = this.mesFinalCmb1.getSelectedItem();
        Object objAnoFinal = this.anoFinalCmb1.getSelectedItem();

        String segmento = objSegmento != null ? objSegmento.toString() : "";
        String diaInicio = objDiaInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaInicio.toString())) : "";
        String mesInicio = objMesInicio != null ? new DecimalFormat("00").format(Integer.parseInt(objMesInicio.toString())) : "";
        String anoInicio = objAnoInicio != null ? objAnoInicio.toString() : "";
        String diaFinal = objDiaFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objDiaFinal.toString())) : "";
        String mesFinal = objMesFinal != null ? new DecimalFormat("00").format(Integer.parseInt(objMesFinal.toString())) : "";
        String anoFinal = objAnoFinal != null ? objAnoFinal.toString() : "";

        for (int i = 0; i <= this.producaoConTable.getRowCount() - 1; i++) {

            String controlador = this.producaoConTable.getValueAt(i, 0).toString();
            String[] nmControlador = controlador.split(" ");
            String primeiroNome = nmControlador[0];
            char inicialSegundoNome = nmControlador.length > 1 ? nmControlador[1].charAt(0) : ' ';

            dataset.addValue(Double.parseDouble(this.producaoConTable.getValueAt(i, 1).toString()), "Qtd. Tratamentos",
                    primeiroNome + " " + inicialSegundoNome + ".");

        }

        String dataPesquisa = "";
        String dataI = diaInicio + "/" + mesInicio + "/" + anoInicio;
        String dataF = diaFinal + "/" + mesFinal + "/" + anoFinal;

        if (dataI.equals(dataF)) {

            dataPesquisa = dataI;

        } else {

            dataPesquisa = dataI + " - " + dataF;

        }

        String titulo = "Quantitativo de Tratamentos por Controlador (" + segmento + "): " + dataPesquisa;
        String eixoy = "Tratamentos";
        String txt_legenda = "";
        boolean legenda = true;
        boolean tooltips = true;
        boolean urls = false;

        JFreeChart graf = ChartFactory.createStackedBarChart(titulo, txt_legenda, eixoy, dataset, PlotOrientation.VERTICAL, legenda, tooltips, urls);
        ChartPanel myChartPanel = new ChartPanel(graf, false);
        myChartPanel.setSize(graficoPanel1.getWidth(), graficoPanel1.getHeight());
        CategoryPlot p = graf.getCategoryPlot();

        CategoryAxis axis = p.getDomainAxis();
        axis.setLowerMargin(0.1);
        axis.setUpperMargin(0.1);
        axis.setCategoryMargin(0.1);

        axis.setCategoryLabelPositions(CategoryLabelPositions.UP_45);
        BarRenderer renderer = (BarRenderer) p.getRenderer();
        renderer.setItemMargin(0.1);
        p.setDomainAxis(axis);
        myChartPanel.setVisible(true);
        this.graficoPanel1.removeAll();
        graficoPanel1.add(myChartPanel);
        graficoPanel1.revalidate();
        graficoPanel1.repaint();

    }

    public void montaGraficoMediaCon() throws SQLException, ClassNotFoundException {

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        data.access.object.DAOProducao DAOProducao = new data.access.object.DAOProducao();

        Object objSegmento = this.segmentoCmb1.getSelectedItem();
        Object objAnoMedia = this.anoMediaCmb.getSelectedItem();

        String segmento = objSegmento != null ? objSegmento.toString() : "";
        String anoMedia = objAnoMedia != null ? objAnoMedia.toString() : "";
        String mesMedia = String.format("%02d", this.mesMediaCmb.getSelectedIndex() + 1);
        String mesNome = this.mesMediaCmb.getSelectedItem().toString();

        List producao = DAOProducao.getMediaProducaoControlador(segmento, mesMedia, anoMedia);

        for (int i = 0; i <= producao.size() - 1; i++) {

            Map obj = (Map) producao.get(i);
            String dia = obj.get("Dia").toString();
            Double media = Double.parseDouble(obj.get("Media").toString());

            dataset.addValue(media, "Media", dia);

        }

        String titulo = "Média Diária de Tratamentos por Controlador (" + segmento + "): " + mesNome;
        String eixoy = "Tratamentos";
        String txt_legenda = "";
     //   boolean legenda = true;
        boolean tooltips = true;
        boolean urls = false;

        JFreeChart graf = ChartFactory.createStackedBarChart3D(titulo, txt_legenda, eixoy, dataset, PlotOrientation.VERTICAL, true, tooltips, urls);
        ChartPanel myChartPanel = new ChartPanel(graf, true);
        myChartPanel.setSize(graficoPanel2.getWidth(), graficoPanel2.getHeight());
        CategoryPlot p = graf.getCategoryPlot();

      //  p.setBackgroundPaint(SystemColor.inactiveCaption);//change background color
        ((BarRenderer) p.getRenderer()).setBarPainter(new StandardBarPainter());

        BarRenderer r = (BarRenderer) graf.getCategoryPlot().getRenderer();
        Color color = new Color(79, 129, 189);
        r.setSeriesPaint(0, color);

        CategoryAxis axis = p.getDomainAxis();
        axis.setLowerMargin(0.1);
        axis.setUpperMargin(0.1);
        axis.setCategoryMargin(0.1);

        axis.setCategoryLabelPositions(CategoryLabelPositions.UP_45);
        BarRenderer renderer = (BarRenderer) p.getRenderer();
        renderer.setItemMargin(0.1);

        p.setDomainAxis(axis);
        myChartPanel.setVisible(true);

        this.graficoPanel2.removeAll();
        graficoPanel2.add(myChartPanel);
        graficoPanel2.revalidate();
        graficoPanel2.repaint();

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrincipalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrincipalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrincipalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrincipalForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrincipalForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox anoFinalCmb;
    private javax.swing.JComboBox anoFinalCmb1;
    private javax.swing.JComboBox anoInicialCmb;
    private javax.swing.JComboBox anoInicialCmb1;
    private javax.swing.JComboBox anoMediaCmb;
    private javax.swing.JPanel basePanel;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JPanel controladorContPanel;
    private javax.swing.JComboBox diaFinalCmb;
    private javax.swing.JComboBox diaFinalCmb1;
    private javax.swing.JComboBox diaInicialCmb;
    private javax.swing.JComboBox diaInicialCmb1;
    private javax.swing.JPanel graficoPanel1;
    private javax.swing.JPanel graficoPanel2;
    private javax.swing.JPanel indicadoresPanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JComboBox mesFinalCmb;
    private javax.swing.JComboBox mesFinalCmb1;
    private javax.swing.JComboBox mesInicialCmb;
    private javax.swing.JComboBox mesInicialCmb1;
    private javax.swing.JComboBox mesMediaCmb;
    private javax.swing.JTabbedPane principalTab;
    private javax.swing.JTable producaoConTable;
    private javax.swing.JComboBox segmentoCmb;
    private javax.swing.JComboBox segmentoCmb1;
    // End of variables declaration//GEN-END:variables
}
